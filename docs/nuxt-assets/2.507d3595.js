import{_ as P,c as k}from"./client-only.92af7aea.js";import{u as E,o as D,F as V,G as A,H,j as b,k as M,l as p,_ as W,m as x,q as R}from"./entry.28691676.js";import{V as y,R as K,P as q,a as B,u as N,b as O,c as U,E as $,D as j,M as G,S as I,d as J,e as Q,f as S}from"./psrdnoise.6a9cb26e.js";import{T as X}from"./Tube1.b771666a.js";import{l as Y}from"./assets.1e6d092a.js";const Z=p("div",{class:"wrapper flex-row"},[p("h1",null,"TEST")],-1),ee=p("canvas",{id:"webgl-main"},null,-1),te=[Z,ee],ae={__name:"Tubes2.client",setup(C){const d=E().$device;let e,i,n;const u=new Array(4),r=new Array(32),c=new y,m=new K,_=new q(new y(0,0,1),0),h=new B,l={pause:!1,pointerHover:!1};D(()=>{V(async()=>{e=N({id:"webgl-main",antialias:!0,alpha:!0}),e.renderer.shadowMap.enabled=!0,e.renderer.shadowMap.type=O,e.minPixelRatio=2,e.maxPixelRatio=2,e.cameraMaxAspect=1.7,e.resize(),e.camera.position.set(0,0,5),e.camera.lookAt(0,0,0),e.updateWorldSize(),i=U(e.camera,e.canvas),i.addEventListener("change",()=>{e.updateWorldSize()});const t=await Y("/envmaps/qwantani_puresky_1k.hdr");t.mapping=$,n=new j(16777215,10),n.position.set(0,0,1),n.castShadow=!0,n.shadow.mapSize.width=2048,n.shadow.mapSize.height=2048,n.shadow.camera.left=-3,n.shadow.camera.right=3,n.shadow.camera.top=3,n.shadow.camera.bottom=-3,e.scene.add(n),e.scene.add(n.target);for(let s=0;s<r.length;s++){const T=S.randFloat(.005,.05),z=S.randInt(32,128),L=new G({color:16777215,metalness:1,roughness:0});r[s]=new X({radius:T,tubularSegments:z,capSements:6},L),r[s].castShadow=!0,r[s].timeDelta=Math.random()*100,e.scene.add(r[s])}const a=new I({transparent:!0,vertexShader:"\n        varying vec2 v_uv;\n        void main() {\n          v_uv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        }\n      ",fragmentShader:"\n        uniform sampler2D glop;\n        varying vec2 v_uv;\n        void main() {\n          vec4 color = texture2D(glop, v_uv);\n          float l = (1.0 - step(0.5, color.b)) * 0.5;\n          gl_FragColor.r = l;\n          gl_FragColor.g = l;\n          gl_FragColor.b = l;\n          gl_FragColor.a = (1.0 - color.a) * l;\n        }\n      "}),o=new J(new Q(e.size.wWidth,e.size.wWidth),a);o.position.z=-1,e.scene.add(o),document.addEventListener("pointermove",F),e.on("update",g)}),A().on("device.resize",()=>{e&&e.resize()}),document.addEventListener("keydown",v)});function g(t){var a;if(i.update(),!d.pointer.hover){const o=t.elapsed;c.x=Math.cos(o*2.5)*e.size.wHeight*.25,c.y=Math.sin(o*2.5)*e.size.wHeight*.25,c.z=0}if(!l.pause)for(let o=0;o<r.length;o++){const s=r[o];s.lerpTo(c,.5,t.elapsed+s.timeDelta),(a=s.helper)==null||a.update()}}function F(t){l.pointerHover=!0,h.copy(d.pointer.relative),m.setFromCamera(h,e.camera),e.camera.getWorldDirection(_.normal),m.ray.intersectPlane(_,c)}function v(t){t.code==="Space"?l.pause=!l.pause:t.code==="KeyL"?w():t.code==="KeyT"?f():t.code==="KeyC"&&(w(),f())}function f(){const t=[];for(let a=0;a<r.length;a++){const o=Math.random()*16777215;t.push(o),r[a].material.color.set(o)}console.log("randomTubesColors",t.map(a=>"#"+(a&16777215).toString(16).padStart(6,"0")))}function w(){const t=[];for(let a=0;a<u.length;a++){const o=Math.random()*16777215;t.push(o),u[a].color.set(o)}console.log("randomLightsColors",t.map(a=>"#"+(a&16777215).toString(16).padStart(6,"0")))}return H(()=>{document.removeEventListener("pointermove",F),document.removeEventListener("keydown",v),i==null||i.dispose(),e&&(e.off("update",g),e.scene.clear(),e.dispose())}),(t,a)=>(b(),M("div",null,te))}},oe=ae,ne=k(oe),se={},re={class:"test"};function ie(C,d){const e=ne,i=P;return b(),M("div",re,[x(i,null,{default:R(()=>[x(e)]),_:1})])}const me=W(se,[["render",ie]]);export{me as default};
