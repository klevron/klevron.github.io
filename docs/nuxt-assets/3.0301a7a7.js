import{u as S,o as P,Q as T,R as k,S as E,j as C,k as I}from"./entry.af5b1f20.js";import{T as R,V as v,q as L,r as H,M as U,h as B,i as K,m as V,u as W,j,E as D,p as G,d as z}from"./camera.79f4e44e.js";import{p as q}from"./psrdnoise.e749dbdf.js";import"./SubSurface.d0dc2b8c.js";import{a as N}from"./assets.a3223b2e.js";class X extends R{constructor(t=64,e=1,o=8,r=4){const a=new Array(t+1).fill(0).map(()=>new v);a.forEach((s,p)=>{s.x=p/t-.5});const c=new L(a);super(c,t+r*2,e,o,!1),this.curve=c,this.parameters.capSegments=r;const l=[],g=this.attributes.position.count;for(let s=0;s<g;s++)l.push(0,0,0);this.setAttribute("color",new H(l,3))}update(){Y(this)}}function Y(h){const{curve:t}=h,{tubularSegments:e,radius:o,radialSegments:r,capSegments:a}=h.parameters,c=t.computeFrenetFrames(t.points.length,!1);h.tangents=c.tangents,h.normals=c.normals,h.binormals=c.binormals;const l=h.getAttribute("position"),g=h.getAttribute("normal"),s=new v,p=new v,f=new v;for(let d=0;d<=e;d++)M(d);l.needsUpdate=!0,g.needsUpdate=!0;function M(d){let n=o;const i=Math.min(t.points.length-1,Math.max(0,d-a)),m=i/(t.points.length-1);let u;if(d<a){t.getPointAt(0,p),t.getPointAt(.5*1/t.points.length,f),u=d/a*(Math.PI/2);const y=Math.cos(Math.PI+u)*o,x=Math.sin(u)*o;p.add(f.sub(p).normalize().multiplyScalar(y)),n=x}else if(d>e-a){t.getPointAt(1,p),t.getPointAt(1-.5*1/t.points.length,f),u=(d-t.points.length+1)/a*(Math.PI/2);const y=Math.cos(u)*o,x=Math.sin(u)*o;p.add(f.sub(p).normalize().multiplyScalar(y)),n=x}else f.set(0,0,0),t.getPointAt(m,p);let w=d*(r+1);const F=c.normals[i],A=c.binormals[i];for(let y=0;y<=r;y++){const x=y/r*Math.PI*2,_=Math.sin(x),b=-Math.cos(x);s.x=b*F.x+_*A.x,s.y=b*F.y+_*A.y,s.z=b*F.z+_*A.z,s.normalize(),l.setXYZ(w,p.x+n*s.x,p.y+n*s.y,p.z+n*s.z),u!==void 0&&s.applyAxisAngle(A.clone().cross(F).cross(s),-Math.PI/2+u),g.setXYZ(w,s.x,s.y,s.z),w++}}}class Z extends U{constructor(t,e){const o=t.tubularSegments||64,r=t.radius||.5,a=t.radialSegments||8,c=t.capSegments||4,l=new X(o,r,a,c);super(l,e),this.curve=this.geometry.curve,this.points=this.curve.points,this.to=new v,this.geometry.update()}lerpTo(t,e=.1,o){const r=new Float32Array(3),a=new Float32Array(3),c=new Float32Array(3);c[0]=t.x*.01+o*.04,c[1]=t.y*.01+o*.048,c[2]=t.z*.01+o*.06,q(c,r,o*2,a),this.to.copy(t),this.to.x+=a[0]*.05,this.to.y+=a[1]*.05,this.to.z+=a[2]*.05,this.points[0].lerp(this.to,e);for(let l=1;l<this.points.length;l++){const g=l/(this.points.length-1)-e/(this.points.length-1);this.curve.getPointAt(g,this.points[l])}this.geometry.update()}}const $={id:"webgl-main"},se={__name:"3",setup(h){const t=S().$device;let e,o;const r=new Array(32),a=new v,c=new B,l=new K(new v(0,0,1),0),g=new V,s={pause:!1,pointerHover:!1};P(()=>{T(async()=>{e=W({id:"webgl-main",antialias:!0,alpha:!0}),e.minPixelRatio=2,e.maxPixelRatio=2,e.cameraMaxAspect=1.7,e.resize(),e.camera.position.set(0,0,5),e.camera.lookAt(0,0,0),e.updateWorldSize(),o=j(e.camera,e.canvas),o.addEventListener("change",()=>{e.updateWorldSize()});const n=await N("/envmaps/studio_small_08_1k.hdr");n.mapping=D,e.scene.background=n;for(let i=0;i<r.length;i++){const m=z.randFloat(.005,.05),u=z.randInt(64,256),w=new G({color:Math.random()*16777215,metalness:1,roughness:0,envMap:n});r[i]=new Z({radius:m,tubularSegments:u,capSements:6},w),r[i].timeDelta=Math.random()*100,e.scene.add(r[i])}document.addEventListener("pointermove",f),e.on("update",p)}),k().on("device.resize",()=>{e&&e.resize()}),document.addEventListener("keydown",M)});function p(n){var i;if(o.update(),!t.pointer.hover){const m=n.elapsed;a.x=Math.cos(m*2.5)*e.size.wHeight*.25,a.y=Math.sin(m*1.6)*e.size.wHeight*.25,a.z=0}if(!s.pause)for(let m=0;m<r.length;m++){const u=r[m];u.lerpTo(a,.35,n.elapsed+u.timeDelta),(i=u.helper)==null||i.update()}}function f(n){s.pointerHover=!0,g.copy(t.pointer.relative),c.setFromCamera(g,e.camera),e.camera.getWorldDirection(l.normal),c.ray.intersectPlane(l,a)}function M(n){n.code==="Space"?s.pause=!s.pause:n.code==="KeyL"||(n.code==="KeyT"||n.code==="KeyC")&&d()}function d(){const n=[];for(let i=0;i<r.length;i++){const m=Math.random()*16777215;n.push(m),r[i].material.color.set(m)}console.log("randomTubesColors",n.map(i=>"#"+(i&16777215).toString(16).padStart(6,"0")))}return E(()=>{document.removeEventListener("pointermove",f),document.removeEventListener("keydown",M),o==null||o.dispose(),e&&(e.off("update",p),e.scene.clear(),e.dispose())}),(n,i)=>(C(),I("canvas",$))}};export{se as default};
