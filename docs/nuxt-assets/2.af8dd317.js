import{u as z,o as C,Q as L,R as P,S as T,j as k,k as E,l as d}from"./entry.af5b1f20.js";import{V as y,h as A,i as D,m as V,u as H,n as R,j as W,E as K,o as j,p as B,a as U,M as q,P as N,d as x}from"./camera.79f4e44e.js";import"./tweakpane.4e5e1789.js";import{T as G}from"./Tube1.f9e105a9.js";import"./SubSurface.d0dc2b8c.js";import{a as I}from"./assets.a3223b2e.js";import"./psrdnoise.e749dbdf.js";const O=d("div",{class:"wrapper flex-row"},[d("h1",null,"TEST")],-1),Q=d("canvas",{id:"webgl-main"},null,-1),$=[O,Q],ne={__name:"2",setup(J){const p=z().$device;let e,i,n;const m=new Array(4),s=new Array(32),l=new y,u=new A,h=new D(new y(0,0,1),0),g=new V,c={pause:!1,pointerHover:!1};C(()=>{L(async()=>{e=H({id:"webgl-main",antialias:!0,alpha:!0}),e.renderer.shadowMap.enabled=!0,e.renderer.shadowMap.type=R,e.minPixelRatio=2,e.maxPixelRatio=2,e.cameraMaxAspect=1.7,e.resize(),e.camera.position.set(0,0,5),e.camera.lookAt(0,0,0),e.updateWorldSize(),i=W(e.camera,e.canvas),i.addEventListener("change",()=>{e.updateWorldSize()});const a=await I("/envmaps/qwantani_puresky_1k.hdr");a.mapping=K,n=new j(16777215,10),n.position.set(0,0,1),n.castShadow=!0,n.shadow.mapSize.width=2048,n.shadow.mapSize.height=2048,n.shadow.camera.left=-3,n.shadow.camera.right=3,n.shadow.camera.top=3,n.shadow.camera.bottom=-3,e.scene.add(n),e.scene.add(n.target);for(let r=0;r<s.length;r++){const S=x.randFloat(.005,.05),M=x.randInt(32,128),b=new B({color:16777215,metalness:1,roughness:0});s[r]=new G({radius:S,tubularSegments:M,capSements:6},b),s[r].castShadow=!0,s[r].timeDelta=Math.random()*100,e.scene.add(s[r])}const t=new U({transparent:!0,vertexShader:"\n        varying vec2 v_uv;\n        void main() {\n          v_uv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        }\n      ",fragmentShader:"\n        uniform sampler2D glop;\n        varying vec2 v_uv;\n        void main() {\n          vec4 color = texture2D(glop, v_uv);\n          float l = (1.0 - step(0.5, color.b)) * 0.5;\n          gl_FragColor.r = l;\n          gl_FragColor.g = l;\n          gl_FragColor.b = l;\n          gl_FragColor.a = (1.0 - color.a) * l;\n        }\n      "}),o=new q(new N(e.size.wWidth,e.size.wWidth),t);o.position.z=-1,e.scene.add(o),document.addEventListener("pointermove",v),e.on("update",F)}),P().on("device.resize",()=>{e&&e.resize()}),document.addEventListener("keydown",w)});function F(a){var t;if(i.update(),!p.pointer.hover){const o=a.elapsed;l.x=Math.cos(o*2.5)*e.size.wHeight*.25,l.y=Math.sin(o*2.5)*e.size.wHeight*.25,l.z=0}if(!c.pause)for(let o=0;o<s.length;o++){const r=s[o];r.lerpTo(l,.5,a.elapsed+r.timeDelta),(t=r.helper)==null||t.update()}}function v(a){c.pointerHover=!0,g.copy(p.pointer.relative),u.setFromCamera(g,e.camera),e.camera.getWorldDirection(h.normal),u.ray.intersectPlane(h,l)}function w(a){a.code==="Space"?c.pause=!c.pause:a.code==="KeyL"?_():a.code==="KeyT"?f():a.code==="KeyC"&&(_(),f())}function f(){const a=[];for(let t=0;t<s.length;t++){const o=Math.random()*16777215;a.push(o),s[t].material.color.set(o)}console.log("randomTubesColors",a.map(t=>"#"+(t&16777215).toString(16).padStart(6,"0")))}function _(){const a=[];for(let t=0;t<m.length;t++){const o=Math.random()*16777215;a.push(o),m[t].color.set(o)}console.log("randomLightsColors",a.map(t=>"#"+(t&16777215).toString(16).padStart(6,"0")))}return T(()=>{document.removeEventListener("pointermove",v),document.removeEventListener("keydown",w),i==null||i.dispose(),e&&(e.off("update",F),e.scene.clear(),e.dispose())}),(a,t)=>(k(),E("div",null,$))}};export{ne as default};
